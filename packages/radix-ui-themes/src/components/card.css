@import './base-card.css';

/* stylelint-disable selector-max-type */
/* Disable selector-max-type rule to target `button` and `a` tags. */
/* Make sure these tags are wrapped in `:where()` for 0 specificity. */

.rt-Card {
  --base-card-padding-top: var(--card-padding);
  --base-card-padding-right: var(--card-padding);
  --base-card-padding-bottom: var(--card-padding);
  --base-card-padding-left: var(--card-padding);
  --base-card-border-radius: var(--card-border-radius);
  --base-card-border-width: var(--card-border-width);

  &:where(:focus-visible)::after {
    outline: 2px solid var(--focus-8);
    outline-offset: -1px;
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*                Sizes                */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

@breakpoints {
  .rt-Card {
    &:where(.rt-r-size-1) {
      --card-padding: var(--space-3);
      --card-border-radius: var(--radius-4);
    }
    &:where(.rt-r-size-2) {
      --card-padding: var(--space-4);
      --card-border-radius: var(--radius-4);
    }
    &:where(.rt-r-size-3) {
      --card-padding: var(--space-5);
      --card-border-radius: var(--radius-5);
    }
    &:where(.rt-r-size-4) {
      --card-padding: var(--space-6);
      --card-border-radius: var(--radius-5);
    }
    &:where(.rt-r-size-5) {
      --card-padding: var(--space-8);
      --card-border-radius: var(--radius-6);
    }
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*         Variants – surface          */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

.rt-Card:where(.rt-variant-surface) {
  --base-card-border-width: 1px;
  background-color: var(--color-panel);

  &::after {
    box-shadow: 0 0 0 1px var(--gray-a5);

    /* When possible, use only a half-transparent gray for nicer border blending with inset images in dark mode */
    @supports (box-shadow: 0 0 0 1px color-mix(in oklab, white, black)) {
      box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a5), var(--gray-5) 25%);
    }
  }
  &:where(button, [href]) {
    @media (hover: hover) {
      &:where(:hover) {
        &::after {
          box-shadow: 0 0 0 1px var(--gray-a7);

          @supports (box-shadow: 0 0 0 1px color-mix(in oklab, white, black)) {
            box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a7), var(--gray-7) 25%);
          }
        }
      }
    }
    &:where([data-state='open']) {
      &::after {
        box-shadow: 0 0 0 1px var(--gray-a7);

        @supports (box-shadow: 0 0 0 1px color-mix(in oklab, white, black)) {
          box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a7), var(--gray-7) 25%);
        }
      }
    }
    &:where(:active:not([data-state='open'])) {
      &::after {
        box-shadow: 0 0 0 1px var(--gray-a7), 0 0 0 1px var(--gray-a6);

        @supports (box-shadow: 0 0 0 1px color-mix(in oklab, white, black)) {
          box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a7), var(--gray-7) 25%), 0 0 0 1px var(--gray-a5);
        }
      }
      &:where(:focus-visible) {
        background-color: var(--gray-a3);
      }
    }
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*         Variants – classic          */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

.rt-Card:where(.rt-variant-classic) {
  --card-border-width: 1px;
  background-color: var(--color-panel);

  &::after {
    /* A transparent shadow to transition smoothly to `:active` */
    box-shadow: 0 0 0 1px var(--color-transparent), var(--shadow-2);
    transition: box-shadow 120ms;
  }

  &:where(button, [href]) {
    @media (hover: hover) {
      &:where(:hover) {
        &::after {
          transition-duration: 40ms;
          box-shadow: var(--base-card-classic-hover-box-shadow);
        }
      }
    }
    &:where([data-state='open']) {
      &::after {
        transition-duration: 40ms;
        box-shadow: var(--base-card-classic-hover-box-shadow);
      }
    }
    &:where(:active:not([data-state='open'])) {
      &::after {
        transition-duration: 40ms;
        box-shadow: 0 0 0 1px var(--gray-a5), var(--shadow-2);
      }
      &:where(:focus-visible) {
        background-color: var(--gray-a3);
      }
    }
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*          Variants – ghost           */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

.rt-Card:where(.rt-variant-ghost) {
  --card-border-width: 0px;

  /* We reset the defined margin variables to avoid inheriting them from a higher component */
  /* If a margin IS defined on the component itself, the utility class will win and reset it */
  --margin-top: 0px;
  --margin-right: 0px;
  --margin-bottom: 0px;
  --margin-left: 0px;

  /* Define the overrides to incorporate the negative margins */
  --margin-top-override: calc(var(--margin-top) - var(--card-padding));
  --margin-right-override: calc(var(--margin-right) - var(--card-padding));
  --margin-bottom-override: calc(var(--margin-bottom) - var(--card-padding));
  --margin-left-override: calc(var(--margin-left) - var(--card-padding));

  margin-top: var(--margin-top-override);
  margin-right: var(--margin-right-override);
  margin-bottom: var(--margin-bottom-override);
  margin-left: var(--margin-left-override);

  /* Reset the overrides */
  .rt-CardInner {
    --margin-top-override: initial;
    --margin-right-override: initial;
    --margin-bottom-override: initial;
    --margin-left-override: initial;
  }
  &:where(button, [href]) {
    @media (hover: hover) {
      &:where(:hover) {
        background-color: var(--gray-a3);
      }
    }
    &:where([data-state='open']) {
      background-color: var(--gray-a3);
    }
    &:where(:active:not([data-state='open'])) {
      background-color: var(--gray-a4);
    }
  }
}
