@import './base-card.css';

/* stylelint-disable selector-max-type */
/* Disable selector-max-type rule to target `button` and `a` tags. */
/* Make sure these tags are wrapped in `:where()` for 0 specificity. */

.rt-Card {
  --base-card-padding-top: var(--card-padding);
  --base-card-padding-right: var(--card-padding);
  --base-card-padding-bottom: var(--card-padding);
  --base-card-padding-left: var(--card-padding);
  --base-card-border-radius: var(--card-border-radius);

  &:where(:focus-visible)::after {
    outline: 2px solid var(--focus-8);
    outline-offset: -1px;
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*                Sizes                */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

@breakpoints {
  .rt-Card {
    &:where(.rt-r-size-1) {
      --card-padding: var(--space-3);
      --card-border-radius: var(--radius-4);
    }
    &:where(.rt-r-size-2) {
      --card-padding: var(--space-4);
      --card-border-radius: var(--radius-4);
    }
    &:where(.rt-r-size-3) {
      --card-padding: var(--space-5);
      --card-border-radius: var(--radius-5);
    }
    &:where(.rt-r-size-4) {
      --card-padding: var(--space-6);
      --card-border-radius: var(--radius-5);
    }
    &:where(.rt-r-size-5) {
      --card-padding: var(--space-8);
      --card-border-radius: var(--radius-6);
    }
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*         Variants – surface          */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

.rt-Card:where(.rt-variant-surface) {
  &:where(button, [href]) {
    @media (hover: hover) {
      &:where(:hover) {
        &::after {
          box-shadow: 0 0 0 1px var(--gray-a7);

          @supports (box-shadow: 0 0 0 1px color-mix(in oklab, white, black)) {
            box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a7), var(--gray-7) 25%);
          }
        }
      }
    }
    &:where([data-state='open']) {
      &::after {
        box-shadow: 0 0 0 1px var(--gray-a7);

        @supports (box-shadow: 0 0 0 1px color-mix(in oklab, white, black)) {
          box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a7), var(--gray-7) 25%);
        }
      }
    }
    &:where(:active:not([data-state='open'])) {
      &::after {
        box-shadow: 0 0 0 1px var(--gray-a7), 0 0 0 1px var(--gray-a6);

        @supports (box-shadow: 0 0 0 1px color-mix(in oklab, white, black)) {
          box-shadow: 0 0 0 1px color-mix(in oklab, var(--gray-a7), var(--gray-7) 25%), 0 0 0 1px var(--gray-a5);
        }
      }
      &:where(:focus-visible) {
        background-color: var(--gray-a3);
      }
    }
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*         Variants – classic          */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

/* prettier-ignore */
:where(.radix-themes) {
  /*
   * Make sure that hovered shadows length matches the shadows length at rest for clean transitions:
   * https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow#interpolation
   */
  --card-classic-hover-box-shadow:
    0 0 0 1px var(--gray-a5),
    0 1px 1px 1px var(--black-a2),
    0 2px 1px -1px var(--gray-a3),
    0 2px 3px -2px var(--black-a1),
    0 3px 12px -4px var(--gray-a3),
    0 4px 16px -8px var(--black-a1);
}
/* prettier-ignore */
:is(.dark, .dark-theme),
:is(.dark, .dark-theme) :where(.radix-themes:not(.light, .light-theme)) {
  --card-classic-hover-box-shadow:
    0 0 0 1px var(--gray-a7),
    0 0 1px 1px var(--gray-a7),
    0 0 1px -1px var(--gray-a4),
    0 0 3px -2px var(--gray-a3),
    0 0 12px -2px var(--gray-a3),
    0 0 16px -8px var(--gray-a9);
}
/* prettier-ignore */
@supports (color: color-mix(in oklab, white, black)) {
  :is(.dark, .dark-theme),
  :is(.dark, .dark-theme) :where(.radix-themes:not(.light, .light-theme)) {
    --card-classic-hover-box-shadow:
      0 0 0 1px color-mix(in oklab, var(--gray-a7), var(--gray-8)),
      0 0 1px 1px var(--gray-a7),
      0 0 1px -1px var(--gray-a4),
      0 0 3px -2px var(--gray-a3),
      0 0 12px -2px var(--gray-a3),
      0 0 16px -8px var(--gray-a9);
  }
}
.rt-Card:where(.rt-variant-classic) {
  &:where(button, [href]) {
    @media (hover: hover) {
      &:where(:hover) {
        &::after {
          transition-duration: 40ms;
          box-shadow: var(--card-classic-hover-box-shadow);
        }
      }
    }
    &:where([data-state='open']) {
      &::after {
        transition-duration: 40ms;
        box-shadow: var(--card-classic-hover-box-shadow);
      }
    }
    &:where(:active:not([data-state='open'])) {
      &::after {
        transition-duration: 40ms;
        box-shadow: 0 0 0 1px var(--gray-a5), var(--shadow-2);
      }
      &:where(:focus-visible) {
        background-color: var(--gray-a3);
      }
    }
  }
}

/* * * * * * * * * * * * * * * * * * * */
/*                                     */
/*          Variants – ghost           */
/*                                     */
/* * * * * * * * * * * * * * * * * * * */

.rt-Card:where(.rt-variant-ghost) {
  &:where(button, [href]) {
    @media (hover: hover) {
      &:where(:hover) {
        background-color: var(--gray-a3);
      }
    }
    &:where([data-state='open']) {
      background-color: var(--gray-a3);
    }
    &:where(:active:not([data-state='open'])) {
      background-color: var(--gray-a4);
    }
  }
}
